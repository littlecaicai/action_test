# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -o main ./main.go

    - name: Test
      run: go test -v ./...
    - name: Tar
      run: tar czvf main.tar.gz ./*
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: tx
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
    - name: Build
      run: go build -o main ./main.go
    - name: tar
      run: tar czvf main.tar.gz ./*
    - name: echo
      run: ls -al && echo "111111111"
      
    - name: ssh deploy
    # You may pin to the exact commit or the version.
      uses: easingthemes/ssh-deploy@main
      env:
        # Private key part of an SSH key pair
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        # Remote host
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        # Remote user
        REMOTE_USER: work
        # Remote port
        REMOTE_PORT: 22
        # Source directory, path relative to `$GITHUB_WORKSPACE` root, eg: `dist/`
        SOURCE: main.tar.gz
        # Target directory
        TARGET: /home/work/ac_test
        # Arguments to pass to rsync
        ARGS: -rlgoDzvc -i 
        # An array of ssh arguments, they must be prefixed with -o and separated by a comma, for example: -o SomeArgument=no, -o SomeOtherArgument=5 
        SSH_CMD_ARGS:  -o StrictHostKeyChecking=no
        SCRIPT_BEFORE: |
          whoami
          ls -al
          rm -rf ac_test/*
        SCRIPT_AFTER: |
          cd ac_test
          tar xzvf main.tar.gz
          ls -al
          echo $RSYNC_STDOUT

   

